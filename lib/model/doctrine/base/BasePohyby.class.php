<?php

/**
 * BasePohyby
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $typ_uctu
 * @property enum $mena
 * @property enum $typ
 * @property enum $karta
 * @property string $kod_transakce
 * @property date $datum
 * @property time $cas
 * @property string $z_uctu
 * @property enum $v_mene
 * @property string $na_ucet
 * @property string $kod_banky
 * @property double $castku
 * @property enum $meny
 * @property double $kurz
 * @property double $poplatek
 * @property double $zprava
 * @property string $variabilni_symbol
 * @property string $konstantni_symbol
 * @property string $specificky_symbol
 * @property date $prevest_dne
 * @property date $ukonceni_platnosti
 * @property string $zprava_pro_prijemce
 * @property string $zprava_pro_mne
 * @property boolean $umoznit_castecnou_realizaci
 * @property boolean $realizovano
 * 
 * @method integer getId()                          Returns the current record's "id" value
 * @method enum    getTypUctu()                     Returns the current record's "typ_uctu" value
 * @method enum    getMena()                        Returns the current record's "mena" value
 * @method enum    getTyp()                         Returns the current record's "typ" value
 * @method enum    getKarta()                       Returns the current record's "karta" value
 * @method string  getKodTransakce()                Returns the current record's "kod_transakce" value
 * @method date    getDatum()                       Returns the current record's "datum" value
 * @method time    getCas()                         Returns the current record's "cas" value
 * @method string  getZUctu()                       Returns the current record's "z_uctu" value
 * @method enum    getVMene()                       Returns the current record's "v_mene" value
 * @method string  getNaUcet()                      Returns the current record's "na_ucet" value
 * @method string  getKodBanky()                    Returns the current record's "kod_banky" value
 * @method double  getCastku()                      Returns the current record's "castku" value
 * @method enum    getMeny()                        Returns the current record's "meny" value
 * @method double  getKurz()                        Returns the current record's "kurz" value
 * @method double  getPoplatek()                    Returns the current record's "poplatek" value
 * @method double  getZprava()                      Returns the current record's "zprava" value
 * @method string  getVariabilniSymbol()            Returns the current record's "variabilni_symbol" value
 * @method string  getKonstantniSymbol()            Returns the current record's "konstantni_symbol" value
 * @method string  getSpecifickySymbol()            Returns the current record's "specificky_symbol" value
 * @method date    getPrevestDne()                  Returns the current record's "prevest_dne" value
 * @method date    getUkonceniPlatnosti()           Returns the current record's "ukonceni_platnosti" value
 * @method string  getZpravaProPrijemce()           Returns the current record's "zprava_pro_prijemce" value
 * @method string  getZpravaProMne()                Returns the current record's "zprava_pro_mne" value
 * @method boolean getUmoznitCastecnouRealizaci()   Returns the current record's "umoznit_castecnou_realizaci" value
 * @method boolean getRealizovano()                 Returns the current record's "realizovano" value
 * @method Pohyby  setId()                          Sets the current record's "id" value
 * @method Pohyby  setTypUctu()                     Sets the current record's "typ_uctu" value
 * @method Pohyby  setMena()                        Sets the current record's "mena" value
 * @method Pohyby  setTyp()                         Sets the current record's "typ" value
 * @method Pohyby  setKarta()                       Sets the current record's "karta" value
 * @method Pohyby  setKodTransakce()                Sets the current record's "kod_transakce" value
 * @method Pohyby  setDatum()                       Sets the current record's "datum" value
 * @method Pohyby  setCas()                         Sets the current record's "cas" value
 * @method Pohyby  setZUctu()                       Sets the current record's "z_uctu" value
 * @method Pohyby  setVMene()                       Sets the current record's "v_mene" value
 * @method Pohyby  setNaUcet()                      Sets the current record's "na_ucet" value
 * @method Pohyby  setKodBanky()                    Sets the current record's "kod_banky" value
 * @method Pohyby  setCastku()                      Sets the current record's "castku" value
 * @method Pohyby  setMeny()                        Sets the current record's "meny" value
 * @method Pohyby  setKurz()                        Sets the current record's "kurz" value
 * @method Pohyby  setPoplatek()                    Sets the current record's "poplatek" value
 * @method Pohyby  setZprava()                      Sets the current record's "zprava" value
 * @method Pohyby  setVariabilniSymbol()            Sets the current record's "variabilni_symbol" value
 * @method Pohyby  setKonstantniSymbol()            Sets the current record's "konstantni_symbol" value
 * @method Pohyby  setSpecifickySymbol()            Sets the current record's "specificky_symbol" value
 * @method Pohyby  setPrevestDne()                  Sets the current record's "prevest_dne" value
 * @method Pohyby  setUkonceniPlatnosti()           Sets the current record's "ukonceni_platnosti" value
 * @method Pohyby  setZpravaProPrijemce()           Sets the current record's "zprava_pro_prijemce" value
 * @method Pohyby  setZpravaProMne()                Sets the current record's "zprava_pro_mne" value
 * @method Pohyby  setUmoznitCastecnouRealizaci()   Sets the current record's "umoznit_castecnou_realizaci" value
 * @method Pohyby  setRealizovano()                 Sets the current record's "realizovano" value
 * 
 * @package    iqPegas konfig
 * @subpackage model
 * @author     Jan Damek
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePohyby extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pohyby');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('typ_uctu', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'bu',
              1 => 'sp',
             ),
             ));
        $this->hasColumn('mena', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'CZK',
              1 => 'USD',
              2 => 'EUR',
             ),
             ));
        $this->hasColumn('typ', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Převod',
              1 => 'Příchozí platba',
              2 => 'Úrok',
              3 => 'Daň',
              4 => 'Platba kartou',
              5 => 'Výběr z bankomatu',
              6 => 'Kompenzace',
              7 => 'Trvalý převod',
              8 => 'Správa účtu',
              9 => 'Poplatek za vedení karty',
              10 => 'Storno převodu',
             ),
             ));
        $this->hasColumn('karta', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'PK: 408364XXXXXX2884',
              1 => 'PK: 408359XXXXXX6465',
             ),
             ));
        $this->hasColumn('kod_transakce', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('datum', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('cas', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('z_uctu', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('v_mene', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'CZK',
              1 => 'USD',
              2 => 'EUR',
             ),
             ));
        $this->hasColumn('na_ucet', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('kod_banky', 'string', 4, array(
             'type' => 'string',
             'length' => 4,
             ));
        $this->hasColumn('castku', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('meny', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'CZK',
              1 => 'USD',
              2 => 'EUR',
             ),
             ));
        $this->hasColumn('kurz', 'double', null, array(
             'type' => 'double',
             'default' => 1,
             ));
        $this->hasColumn('poplatek', 'double', null, array(
             'type' => 'double',
             'default' => 0,
             ));
        $this->hasColumn('zprava', 'double', null, array(
             'type' => 'double',
             'default' => 0,
             ));
        $this->hasColumn('variabilni_symbol', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('konstantni_symbol', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('specificky_symbol', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('prevest_dne', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('ukonceni_platnosti', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('zprava_pro_prijemce', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('zprava_pro_mne', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('umoznit_castecnou_realizaci', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('realizovano', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}